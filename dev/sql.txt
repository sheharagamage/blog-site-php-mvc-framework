CREATE DATABASE mvc_db;

CREATE TABLE Users(
    id INT AUTO_INCREMENT,
    profile_image VARCHAR(255),
    name VARCHAR(255),
    email VARCHAR(255),
    password VARCHAR(255),
    create_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id)
);

CREATE TABLE Posts(
    id INT AUTO_INCREMENT,
    user_id INT,
    image VARCHAR(255),
    title VARCHAR(255),
    body TEXT,
    likes INT DEFAULT 0,
    dislikes INT DEFAULT 0,
    views INT DEFAULT 0,
    create_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id),
    FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE
);

create table postinteractions(
    interaction_id INT AUTO_INCREMENT,
    post_id INT,
    user_id INT,
    interaction VARCHAR(255),
    PRIMARY KEY (interaction_id),
    FOREIGN KEY(post_id) REFFERENCES posts(id) ON DELETE CASCADE,
    FOREIGN KEY(user_id) REFFERENCEs users(id) ON DELETE CASCADE
);

CREATE VIEW v_posts AS 
    SELECT 
        posts.id AS post_id,
        users.id AS user_id,
        users.name AS user_name,
        users.profile_image AS profile_image,
        posts.image AS image,
        posts.title AS title,
        posts.body AS body,
        posts.likes AS likes,
        posts.dislikes AS dislikes,
        posts.views AS views,
        posts.create_at AS post_create_at,   
        users.create_at AS user_create_at
    FROM posts 
    INNER JOIN users ON posts.user_id = users.id
    ORDER BY posts.create_at DESC;


create table comments(
    comment_id INT AUTO_INCREMENT,
    post_id INT,
    user_id INT,
    content TEXT NOT NULL,
    likes INT DEFAULT 0,
    dislikes INT DEFAULT 0,
    PRIMARY KEY (comment_id),
    create_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY(post_id) REFFERENCES posts(id) ON DELETE CASCADE,
    FOREIGN KEY(user_id) REFFERENCEs users(id) ON DELETE CASCADE
);

CREATE VIEW v_comments AS 
    SELECT 
        comments.comment_id AS comment_id,
        comments.post_id AS post_id,
        users.id AS user_id,
        users.name AS user_name,
        users.profile_image AS profile_image,
        comments.content AS content,
        comments.likes AS likes,
        comments.dislikes AS dislikes, 
        comments.create_at AS comment_create_at,  
        users.create_at AS user_create_at
    FROM comments
    INNER JOIN users ON 
    comments.user_id = users.id 
    ORDER BY  comments.create_at DESC;


create table commentinteractions(
    interaction_id INT AUTO_INCREMENT,
    comment_id INT,
    user_id INT,
    interaction VARCHAR(255),
    PRIMARY KEY (interaction_id),
    FOREIGN KEY(comment_id) REFERENCES comments(comment_id) ON DELETE CASCADE,
    FOREIGN KEY(user_id) REFERENCEs users(id) ON DELETE CASCADE
);